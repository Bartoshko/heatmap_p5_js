#[cfg(test)]
mod tests {
    #[test]
    fn it_works() {
        assert_eq!(2 + 2, 4);
    }
}

extern crate nalgebra as na;

use wasm_bindgen::prelude::*;
// use wasm_bindgen::JsValue;
use na::{Matrix, Dynamic, MatrixVec, DMatrix};
// #[wasm_bindgen]
// extern {
    
// }

#[wasm_bindgen]
#[derive(Clone, Debug, PartialEq, Eq)]
pub struct HeatMapGread {
    matrix: Matrix<u32, Dynamic, Dynamic, MatrixVec<u32, Dynamic, Dynamic>>,
    matrix_copy: Matrix<u32, Dynamic, Dynamic, MatrixVec<u32, Dynamic, Dynamic>>,
}

#[wasm_bindgen]
impl HeatMapGread {
    pub fn new(width: usize, height: usize) -> Self {
        let grid = DMatrix::from_fn(height, width, |_, _| 0_u32);
        let grid_copy = grid.
        Self {}
    }
}